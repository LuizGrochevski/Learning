

*Lógica de Programação - Dev Aprender*

"Saber programar é secundário o importante é saber criar soluções bem definidas!" - Jhonatan de Souza
"Saber analisar e resolver um problema é mais importante que decorar os comandos de uma linguagem de programação!" - Jhonatan de Souza
"Quanto mais expreriente se tornar, mais óbvio ficam os caminhos que levam a uma solução" - Jhonatan de Souza

Problema #1 - Copo de água
Como conseguir 2ml de água sem ter um copo de 2ml, mas tendo dois copos um de 5ml e outro de 3ml?
Objetivo: 2ml
Solução:
Enxer o copo de 5ml e enxer o copo de 3ml usando a água do copo de 5ml

Problema #2 - Meu salário por hora
Escreva um programa que retorne o valor hora de um funcionário com base no salário mensal e horas trabalhadas por mês.
valor hora: salário mensal / total de horas trabalhadas
Solução:
salário mensal: R$2500.00
horas trabalhadas: 176 horas
2500/176 = R$14.20

O que são algoritimos?
"Um algoritimo é silplesmente uma série de intruções a serem seguidas, para resolver um problema"

Quando algoritimos devem ser criados?
Sempre que queremos montar uma sequência de passos necessários para solucionar um problema

Qual é a estratégia para montar um algorítimo?
independente se:
Quando alguém te apresenta um problema a ser resolvido.
Quando você encontra um problema a ser resolvido.

Método 5Q's para montar um algorítimo:
Analise criticamente o problema e descubra:
(tente explicar este problema para você mesmo em voz alta e peã mais informações/investigue mais até voce compreender completamente o problema.)

1. Quais são os dados de entrada necessários?
2. O que devo fazer com estes dados?
3. Quais são as restrições deste problema?
4. Qual é o resultado esperado?
5. Qual é sequência de passos a ser feitas para chegar ao resultado esperado?

Problema 1 - Ligar para alguém
Monte um algoritimo necessário para ligar para um amigo

1. Quais são os dados de entrada necessários?
* um telefone
* um número de celular

2. O que devo fazer com estes dados?
* devo usar o celular para discar o número do meu amigo

3. Quais são as restrições deste problema?
* Caso meu amigo não atenda, devo deixar uma mensagem dizendo: "me ligue de volta"

4. Qual é o resultado esperado?
* Conseguir falar com meu amigo

5. Qual é sequência de passos a ser feitas para chegar ao resultado esperado?
 1. Pegar o telefone
 2. Se estiver travado por senha, destrave o celular
 3. Verifique se há sinal da operadora
 4. Navegue até o discador do celular
 5. Digite o número do seu amigo
 6. Aperte no botão de "ligar"
 7. Aguarde a ligação completar
 8. Se a ligação completar, conversar com ele
 9. se a ligação não completar, deixar uma mensagem dizendo "me ligue de volta" 

Problema 2 - Valor por hora
Escreva um programa que retorna o valor hora de um funcionário com base no seu salário mensal e horas trabalhadas por mês.

1. Quais são os dados de entrada necessários?
 * Salário mensal
 * Horas trabalhadas

2. O que devo fazer com estes dados?
 * Devo usar eles para calcular o valor hora que um funcionário recebe usando o cálculo salário mensal / horas traballhadas

3. Quais são as restrições deste problema?
 * Os valores devem ser entregues somente em formato de salário por hora

4. Qual é o resultado esperado?
 * O valor hora que o funcionario recebe.

5. Qual é sequência de passos a ser feitas para chegar ao resultado esperado?
 1. peguntar quanto a pessoa ganha por mês
 2. guardar essa informação
 3. pergunta quantas horas ela trabalha por mês
 4. guardar essa informação
 5. calcular o valor hora da pessoa (salário mensal / horas trabalhadas)
 6. exibir o valor hora daquela pessoa

Problema 3 - Chute o número
Escreva um programa que, ao iniciar gera um valor aleatório de 1 a 10 e permite que o usuário chute um número até que o valor aleatório gerado no início do programa seja chutado corretamente.
O programa deve informar se o chute foi acima, abaixo ou igual ao valor aleatório gerado no início do programa.

1. Quais são os dados de entrada necessários?
 * um valor aleatório de 1 a 10
 * o chute do usuario

2. O que devo fazer com estes dados?
 * Devo pegar o valor aleatório de 1 a 10 que foi gerado e comparar com o valor que foi chutado pelo usuário.
 * Se o chute for maior ou menor que valor gerado, alertar o usuário sobre isso e o deixar jogar novamente até que acerte o número que foi gerado.

3. Quais são as restrições deste problema?
 * O programa não deve ser finalizado até que um valor seja chutado corretamente.
 * O usuário deverá ser capaz de jogar quantas vezes quiser.

4. Qual é o resultado esperado?
 * O programa identificar que o valor chutado pelo usuário é igual ao valor gerado no início do programa.

5. Qual é sequência de passos a ser feitas para chegar ao resultado esperado?
 1. Gerar um valor aleatório de 1 a 10.
 2. Armazenar este valor.
 3. Receber o chute do usuário.
 4. Comparar o chute do usuário com o valor aleatório gerado.
 5. se o chute for maior que o valor gerado, exibir "chutou alto" e voltar ao passo 3.
 6. se o chute for menor que o valor gerado, exibir "chutou baixo" e voltar ao passo 3.
 7. se o chute for igual que o valor gerado, exibir "acertou!" e voltar ao passo 1.





